<?php
// $Id: uc_recurring.install,v 1.4.4.4 2009/01/16 22:12:35 rszrama Exp $

function uc_recurring_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {uc_recurring_products} (
        pfid mediumint(9) NOT NULL,
        model varchar(255) NOT NULL,
        fee_amount decimal(10,2) NOT NULL,
        initial_charge varchar(255) NOT NULL,
        regular_interval varchar(255) NOT NULL,
        number_intervals smallint(4) NOT NULL,
        PRIMARY KEY pfid (pfid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_recurring_users} (
        rfid mediumint(9) NOT NULL,
        uid mediumint(9) NOT NULL,
        fee_handler varchar(255) NOT NULL,
        next_charge int(11) NOT NULL,
        fee_amount decimal(10,2) NOT NULL,
        regular_interval varchar(255) NOT NULL,
        remaining_intervals smallint(4) NOT NULL,
        charged_intervals smallint(4) NOT NULL,
        order_id mediumint(9) NOT NULL,
        data text NOT NULL,
        created int(11) NOT NULL,
        PRIMARY KEY rfid (rfid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {uc_recurring_products} (
        pfid integer NOT NULL default 0,
        model varchar(255) NOT NULL default '',
        fee_amount decimal(10,2) NOT NULL default 0.0,
        initial_charge varchar(255) NOT NULL default '',
        regular_interval varchar(255) NOT NULL default '',
        number_intervals integer NOT NULL default 0,
        PRIMARY KEY (pfid)
      )");
      db_query("CREATE TABLE {uc_recurring_users} (
        rfid integer NOT NULL default 0,
        uid integer NOT NULL default 0,
        next_charge integer NOT NULL default 0,
        fee_amount decimal(10,2) NOT NULL default 0.0,
        regular_interval varchar(255) NOT NULL default '',
        remaining_intervals integer NOT NULL default 0,
        charged_intervals integer NOT NULL default 0,
        order_id integer NOT NULL default 0,
        data text NOT NULL,
        created integer NOT NULL,
        PRIMARY KEY (rfid)
      )");
      break;
  }
}

function uc_recurring_uninstall() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("DROP TABLE IF EXISTS {uc_recurring_products}");
      db_query("DROP TABLE IF EXISTS {uc_recurring_users}");
      break;
    case 'pgsql':
      db_query("DROP TABLE {uc_recurring_products}");
      db_query("DROP TABLE {uc_recurring_users}");
      break;
  }

  db_query("DELETE FROM {variable} WHERE name LIKE 'uc_recurring_%%'");
  cache_clear_all('variables', 'cache');
}

function uc_recurring_update_1() {
  $ret = array();

  // Add a column to store the recurring fee handler with the user subscription.
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_recurring_users} ADD fee_handler VARCHAR(255) NOT NULL AFTER uid");
      break;
    case 'pgsql':
      db_add_column($ret, 'uc_recurring_users', 'fee_handler', 'varchar(255)', array('not null' => TRUE, 'default' => "''"));
      break;
  }

  // Update existing rows if uc_recurring is the current handler.
  if (variable_get('uc_recurring_handler', 'uc_recurring') == 'uc_recurring') {
    $ret[] = update_sql("UPDATE {uc_recurring_users} SET fee_handler = 'uc_recurring'");
  }

  return $ret;
}
